{"remainingRequest":"/home/samayrton/Documents/final-year-project/final-year-project/node_modules/babel-loader/lib/index.js!/home/samayrton/Documents/final-year-project/final-year-project/node_modules/vuetify/lib/composables/layout.mjs","dependencies":[{"path":"/home/samayrton/Documents/final-year-project/final-year-project/node_modules/vuetify/lib/composables/layout.mjs","mtime":499162500000},{"path":"/home/samayrton/Documents/final-year-project/final-year-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samayrton/Documents/final-year-project/final-year-project/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../src/composables/layout.ts"],"names":["getUid","convertToUnit","propsFactory","VuetifyLayoutKey","Symbol","makeLayoutProps","overlaps","type","default","fullHeight","Boolean","makeLayoutItemProps","name","String","priority","size","layout","inject","id","styles","onBeforeUnmount","generateLayers","previousLayer","top","left","right","bottom","layers","layer","ids","l","registered","position","positions","amount","amounts","parseInt","ref","priorities","computedOverlaps","computed","map","props","item","overlap","topPosition","bottomPosition","topAmount","bottomAmount","entries","sortedEntries","a","b","mainStyles","items","Number","getLayoutItem","provide","register","index","i","isHorizontal","isOpposite","unregister","v","layoutClasses"],"mappings":"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","sourcesContent":["// Utilities\nimport { inject, provide, computed, ref, onBeforeUnmount } from 'vue'\nimport { getUid, convertToUnit } from '@/util'\nimport propsFactory from '@/util/propsFactory'\n\n// Types\nimport type { InjectionKey, Ref, Prop } from 'vue'\n\ntype Position = 'top' | 'left' | 'right' | 'bottom'\n\ntype LayoutItem = {\n  id: string\n  top: number\n  bottom: number\n  left: number\n  right: number\n  size: number\n}\n\ninterface LayoutProvide {\n  register: (id: string, priority: Ref<number>, position: Ref<Position>, amount: Ref<number | string>) => Ref<Record<string, unknown>>\n  unregister: (id: string) => void\n  mainStyles: Ref<Record<string, unknown>>\n  getLayoutItem: (id: string) => LayoutItem | undefined\n  items: Ref<LayoutItem[]>\n}\n\nexport const VuetifyLayoutKey: InjectionKey<LayoutProvide> = Symbol.for('vuetify:layout')\n\nexport const makeLayoutProps = propsFactory({\n  overlaps: {\n    type: Array,\n    default: () => ([]),\n  } as Prop<string[]>,\n  fullHeight: Boolean,\n})\n\nexport const makeLayoutItemProps = propsFactory({\n  name: {\n    type: String,\n  },\n  priority: {\n    type: Number,\n    default: 0,\n  },\n  size: {\n    type: [Number, String],\n    default: 300,\n  },\n})\n\nexport function useMain () {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('Could not find injected Vuetify layout')\n\n  return layout\n}\n\nexport function useLayoutItem (\n  name: string | undefined,\n  priority: Ref<number>,\n  position: Ref<Position>,\n  amount: Ref<number | string>\n) {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('Could not find injected Vuetify layout')\n\n  const id = name ?? `layout-item-${getUid()}`\n\n  const styles = layout.register(id, priority, position, amount)\n\n  onBeforeUnmount(() => layout.unregister(id))\n\n  return styles\n}\n\nconst generateLayers = (\n  layout: string[],\n  registered: string[],\n  positions: Map<string, Ref<Position>>,\n  amounts: Map<string, Ref<number | string>>\n) => {\n  let previousLayer = { top: 0, left: 0, right: 0, bottom: 0 }\n  const layers = [{ id: '', layer: { ...previousLayer } }]\n  const ids = !layout.length ? registered : layout.map(l => l.split(':')[0]).filter(l => registered.includes(l))\n  for (const id of ids) {\n    const position = positions.get(id)\n    const amount = amounts.get(id)\n    if (!position || !amount) continue\n\n    const layer = {\n      ...previousLayer,\n      [position.value]: parseInt(previousLayer[position.value], 10) + parseInt(amount.value, 10),\n    }\n\n    layers.push({\n      id,\n      layer,\n    })\n\n    previousLayer = layer\n  }\n\n  return layers\n}\n\n// TODO: Remove undefined from layout and overlaps when vue typing for required: true prop is fixed\nexport function createLayout (props: { layout?: string[], overlaps?: string[] }) {\n  const registered = ref<string[]>([])\n  const positions = new Map<string, Ref<Position>>()\n  const amounts = new Map<string, Ref<number | string>>()\n  const priorities = new Map<string, Ref<number>>()\n\n  const computedOverlaps = computed(() => {\n    const map = new Map<string, { position: Position, amount: number }>()\n    const overlaps = props.overlaps ?? []\n    for (const overlap of overlaps.filter(item => item.includes(':'))) {\n      const [top, bottom] = overlap.split(':')\n      if (!registered.value.includes(top) || !registered.value.includes(bottom)) continue\n\n      const topPosition = positions.get(top)\n      const bottomPosition = positions.get(bottom)\n      const topAmount = amounts.get(top)\n      const bottomAmount = amounts.get(bottom)\n\n      if (!topPosition || !bottomPosition || !topAmount || !bottomAmount) continue\n\n      map.set(bottom, { position: topPosition.value, amount: parseInt(topAmount.value, 10) })\n      map.set(top, { position: bottomPosition.value, amount: -parseInt(bottomAmount.value, 10) })\n    }\n\n    return map\n  })\n\n  const layers = computed(() => {\n    const entries = [...priorities.entries()]\n    const sortedEntries = entries.sort(([, a], [, b]) => a.value - b.value).map(([id]) => id)\n    return generateLayers(sortedEntries, registered.value, positions, amounts)\n  })\n\n  const mainStyles = computed(() => {\n    const layer = layers.value[layers.value.length - 1].layer\n\n    return {\n      position: 'absolute',\n      left: convertToUnit(layer.left),\n      right: convertToUnit(layer.right),\n      top: convertToUnit(layer.top),\n      bottom: convertToUnit(layer.bottom),\n    }\n  })\n\n  const items = computed(() => {\n    return layers.value.slice(1).map(({ id }, index) => {\n      const { layer } = layers.value[index]\n      const size = amounts.get(id)\n\n      return {\n        id,\n        ...layer,\n        size: Number(size!.value),\n      }\n    })\n  })\n\n  const getLayoutItem = (id: string) => {\n    return items.value.find(item => item.id === id)\n  }\n\n  provide(VuetifyLayoutKey, {\n    register: (id: string, priority: Ref<number>, position: Ref<Position>, amount: Ref<number | string>) => {\n      priorities.set(id, priority)\n      positions.set(id, position)\n      amounts.set(id, amount)\n      registered.value.push(id)\n\n      return computed(() => {\n        const index = items.value.findIndex(i => i.id === id)\n\n        if (index < 0) throw new Error(`Layout item \"${id}\" is missing from layout prop`)\n\n        const item = items.value[index]\n\n        if (!item) throw new Error(`Could not find layout item \"${id}`)\n\n        const overlap = computedOverlaps.value.get(id)\n        if (overlap) {\n          item[overlap.position] += overlap.amount\n        }\n\n        const isHorizontal = position.value === 'left' || position.value === 'right'\n        const isOpposite = position.value === 'right'\n\n        const amount = amounts.get(id)\n\n        return {\n          [position.value]: 0,\n          height: isHorizontal ? `calc(100% - ${item.top}px - ${item.bottom}px)` : `${amount?.value ?? 0}px`,\n          marginLeft: isOpposite ? undefined : `${item.left}px`,\n          marginRight: isOpposite ? `${item.right}px` : undefined,\n          marginTop: position.value !== 'bottom' ? `${item.top}px` : undefined,\n          marginBottom: position.value !== 'top' ? `${item.bottom}px` : undefined,\n          position: 'absolute',\n          width: !isHorizontal ? `calc(100% - ${item.left}px - ${item.right}px)` : `${amount?.value ?? 0}px`,\n          zIndex: layers.value.length - index,\n        }\n      })\n    },\n    unregister: (id: string) => {\n      positions.delete(id)\n      amounts.delete(id)\n      priorities.delete(id)\n      registered.value = registered.value.filter(v => v !== id)\n    },\n    mainStyles,\n    getLayoutItem,\n    items,\n  })\n\n  return { layoutClasses: ref('v-layout'), getLayoutItem, items }\n}\n"]}]}