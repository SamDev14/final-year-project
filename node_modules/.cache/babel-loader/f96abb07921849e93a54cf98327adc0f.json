{"remainingRequest":"/home/samayrton/Documents/final-year-project/final-year-project/node_modules/babel-loader/lib/index.js!/home/samayrton/Documents/final-year-project/final-year-project/node_modules/vuetify/lib/composables/border.mjs","dependencies":[{"path":"/home/samayrton/Documents/final-year-project/final-year-project/node_modules/vuetify/lib/composables/border.mjs","mtime":499162500000},{"path":"/home/samayrton/Documents/final-year-project/final-year-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samayrton/Documents/final-year-project/final-year-project/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL3NhbWF5cnRvbi9Eb2N1bWVudHMvZmluYWwteWVhci1wcm9qZWN0L2ZpbmFsLXllYXItcHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKLy8gVXRpbGl0aWVzCmltcG9ydCB7IGNvbXB1dGVkIH0gZnJvbSAndnVlJzsKaW1wb3J0IHByb3BzRmFjdG9yeSBmcm9tICIuLi91dGlsL3Byb3BzRmFjdG9yeS5tanMiOyAvLyBUeXBlcwovLyBDb21wb3NhYmxlcwoKZXhwb3J0IHZhciBtYWtlQm9yZGVyUHJvcHMgPSBwcm9wc0ZhY3RvcnkoewogIG91dGxpbmVkOiBCb29sZWFuLAogIGJvcmRlcjogW0Jvb2xlYW4sIE51bWJlciwgU3RyaW5nXQp9KTsKZXhwb3J0IGZ1bmN0aW9uIHVzZUJvcmRlcihwcm9wcywgbmFtZSkgewogIHZhciBib3JkZXJDbGFzc2VzID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgdmFyIGNsYXNzZXMgPSBbXTsKCiAgICBpZiAocHJvcHMub3V0bGluZWQgfHwgcHJvcHMuYm9yZGVyID09PSB0cnVlIHx8IHByb3BzLmJvcmRlciA9PT0gJycpIHsKICAgICAgY2xhc3Nlcy5wdXNoKCIiLmNvbmNhdChuYW1lLCAiLS1ib3JkZXIiKSk7CiAgICB9IGVsc2UgaWYgKHR5cGVvZiBwcm9wcy5ib3JkZXIgPT09ICdzdHJpbmcnIHx8IHByb3BzLmJvcmRlciA9PT0gMCkgewogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoU3RyaW5nKHByb3BzLmJvcmRlcikuc3BsaXQoJyAnKSksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciB2YWx1ZSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgY2xhc3Nlcy5wdXNoKCJib3JkZXItIi5jb25jYXQodmFsdWUpKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBjbGFzc2VzOwogIH0pOwogIHJldHVybiB7CiAgICBib3JkZXJDbGFzc2VzOiBib3JkZXJDbGFzc2VzCiAgfTsKfQ=="},{"version":3,"sources":["../../src/composables/border.ts"],"names":["propsFactory","makeBorderProps","outlined","border","borderClasses","computed","classes","props","String"],"mappings":";;;;AAAA;AACA,SAAA,QAAA,QAAA,KAAA;OACOA,Y,kCAEP;AAMA;;AACA,OAAO,IAAMC,eAAe,GAAGD,YAAY,CAAC;AAC1CE,EAAAA,QAAQ,EADkC,OAAA;AAE1CC,EAAAA,MAAM,EAAE,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA;AAFkC,CAAD,CAApC;AAKP,OAAO,SAAA,SAAA,CAAA,KAAA,EAAA,IAAA,EAAsD;AAC3D,MAAMC,aAAa,GAAGC,QAAQ,CAAC,YAAM;AACnC,QAAMC,OAAiB,GAAvB,EAAA;;AAEA,QAAIC,KAAK,CAALA,QAAAA,IAAkBA,KAAK,CAALA,MAAAA,KAAlBA,IAAAA,IAA2CA,KAAK,CAALA,MAAAA,KAA/C,EAAA,EAAoE;AAClED,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,GAAAA,MAAAA,CAAAA,IAAAA,EAAAA,UAAAA,CAAAA;AADF,KAAA,MAEO,IACL,OAAOC,KAAK,CAAZ,MAAA,KAAA,QAAA,IACAA,KAAK,CAALA,MAAAA,KAFK,CAAA,EAGL;AAAA,iDACoBC,MAAM,CAACD,KAAK,CAAZC,MAAM,CAANA,CAAAA,KAAAA,CAApB,GAAoBA,CADpB;AAAA;;AAAA;AACA,4DAAqD;AAAA,cAArD,KAAqD;AACnDF,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,UAAAA,MAAAA,CAAAA,KAAAA,CAAAA;AACD;AAHD;AAAA;AAAA;AAAA;AAAA;AAID;;AAED,WAAA,OAAA;AAdF,GAA8B,CAA9B;AAiBA,SAAO;AAAEF,IAAAA,aAAAA,EAAAA;AAAF,GAAP;AACD","sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport propsFactory from '@/util/propsFactory'\n\n// Types\nexport interface BorderProps {\n  outlined: boolean\n  border?: boolean | number | string\n}\n\n// Composables\nexport const makeBorderProps = propsFactory({\n  outlined: Boolean,\n  border: [Boolean, Number, String],\n})\n\nexport function useBorder (props: BorderProps, name: string) {\n  const borderClasses = computed(() => {\n    const classes: string[] = []\n\n    if (props.outlined || props.border === true || props.border === '') {\n      classes.push(`${name}--border`)\n    } else if (\n      typeof props.border === 'string' ||\n      props.border === 0\n    ) {\n      for (const value of String(props.border).split(' ')) {\n        classes.push(`border-${value}`)\n      }\n    }\n\n    return classes\n  })\n\n  return { borderClasses }\n}\n"]}]}